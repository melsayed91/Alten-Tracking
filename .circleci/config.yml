version: 2
jobs:
  test-driver-service:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout     
      - run:
          name: Install dependencies
          command: cd alten.backend/services/driver-service && npm install
      - run:
          name: Run tests
          command: cd alten.backend/services/driver-service && npm test
  test-monitoring-service:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: cd alten.backend/services/monitoring-service && npm install
      - run:
          name: Run tests
          command: cd alten.backend/services/monitoring-service && npm test
  test-vehicle-service:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: cd alten.backend/services/vehicle-service && npm install
      - run:
          name: Run tests
          command: cd alten.backend/services/vehicle-service && npm test
  deploy-to-staging:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "Alten"
      - GOOGLE_PROJECT_ID: "alten-239719"
      - GOOGLE_COMPUTE_ZONE: "us-central1-a"
      - GOOGLE_CLUSTER_NAME: "alten-cluster"
    steps:
      - checkout
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run:
          name: Docker build and push driver service
          command: |
              cd alten.backend/services/driver-service
              docker build -t gcr.io/${GOOGLE_PROJECT_ID}/driverservice:0.0.1 .
              gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
              docker push gcr.io/${GOOGLE_PROJECT_ID}/driverservice:0.0.1 
      - run:
          name: Docker build and push monitoring service
          command: |
              cd alten.backend/services/monitoring-service
              docker build -t gcr.io/${GOOGLE_PROJECT_ID}/monitorservice:0.0.1 .
              gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
              docker push gcr.io/${GOOGLE_PROJECT_ID}/monitorservice:0.0.1 
      - run:
          name: Docker build and push vehicle service
          command: |
               cd alten.backend/services/vehicle-service
               docker build -t gcr.io/${GOOGLE_PROJECT_ID}/vehicleservice:0.0.1 .
               gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
               docker push gcr.io/${GOOGLE_PROJECT_ID}/vehicleservice:0.0.1 

workflows:
  version: 2
  alten_pipeline:
    jobs:
      - test-driver-service
      - test-monitoring-service
      - test-vehicle-service
      - deploy-to-staging
        
      